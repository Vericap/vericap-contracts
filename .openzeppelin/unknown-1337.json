{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "22596488ad2d8994a918f89058e09e4d641d82d7f814ae691f8c8012da0d6f65": {
      "address": "0x358B48eF87284e8f7146D15ca4259faD149E2338",
      "txHash": "0x82323c36c494efccb514f649b9d6260e914d8d249aea21684606432445cb9e4f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "203",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:508"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:18"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC1155SupplyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/extensions/ERC1155SupplyUpgradeable.sol:76"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "302",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "351",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BasicMetaTransaction",
            "src": "contracts/helper/BasicMetaTransaction.sol:15"
          },
          {
            "label": "_batchIds",
            "offset": 0,
            "slot": "352",
            "type": "t_struct(Counter)3330_storage",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:32"
          },
          {
            "label": "projectIds",
            "offset": 0,
            "slot": "353",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:47"
          },
          {
            "label": "batchDetails",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(BatchDetail)9635_storage)dyn_storage)))",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:76"
          },
          {
            "label": "commodityList",
            "offset": 0,
            "slot": "355",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:82"
          },
          {
            "label": "batchIndexList",
            "offset": 0,
            "slot": "356",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:87"
          },
          {
            "label": "batchList",
            "offset": 0,
            "slot": "357",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:92"
          },
          {
            "label": "projectCommodityTotalSupply",
            "offset": 0,
            "slot": "358",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:97"
          },
          {
            "label": "commodityIdExists",
            "offset": 0,
            "slot": "359",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:103"
          },
          {
            "label": "projectIdExists",
            "offset": 0,
            "slot": "360",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:108"
          },
          {
            "label": "_transferDisabled",
            "offset": 0,
            "slot": "361",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VericapPCCManager",
            "src": "contracts/PCCManager/VericapPCCManager.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(BatchDetail)9635_storage)dyn_storage": {
            "label": "struct VericapPCCManager.BatchDetail[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(BatchDetail)9635_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct VericapPCCManager.BatchDetail[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(BatchDetail)9635_storage)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct VericapPCCManager.BatchDetail[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_uint256)dyn_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(uint256 => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_uint256,t_array(t_struct(BatchDetail)9635_storage)dyn_storage)))": {
            "label": "mapping(uint256 => mapping(uint256 => mapping(uint256 => struct VericapPCCManager.BatchDetail[])))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BatchDetail)9635_storage": {
            "label": "struct VericapPCCManager.BatchDetail",
            "members": [
              {
                "label": "batchId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "batchOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "deliveryEstimates",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "batchURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "projectId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "commodityId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "deliveryYear",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "batchSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Counter)3330_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
